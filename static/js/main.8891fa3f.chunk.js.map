{"version":3,"sources":["components/HeaderContent.js","components/contacts/ContactForm.js","components/contacts/UpdateContactModal.js","components/contacts/DeleteContactModal.js","components/contacts/ContactCard.js","components/Contacts.js","components/quiz/Question.js","components/quiz/Answer.js","components/quiz/Stat.js","data/random.js","data/randomPuzzle.js","components/Quiz.js","Main.js","index.js"],"names":["HeaderContent","title","className","FEEDBACK","PLACEHOLDER","EMPTY_CONTACT","id","name","email","tel","ContactForm","props","handleNameChange","e","setState","target","value","handleEmailChange","handleTelChange","handleSubmit","onSubmit","_","clone","state","formRef","current","reset","React","createRef","contact","onValidSubmit","this","ref","inputClass","type","errorMessage","validate","required","onChange","placeholder","onCancel","Button","outline","onClick","color","size","cancelLabel","submitLabel","Component","defaultProps","LABELS","UpdateContactModal","Modal","isOpen","ModalHeader","ModalBody","DeleteContactModal","TEXT","ContactCard","showUpdateModal","update","hideUpdateModal","showDeleteModal","delete","hideDeleteModal","handleUpdateContact","onUpdateContact","handleDeleteContact","onDeleteContact","Card","CardBody","CardTitle","CardText","Contacts","handleAddContact","contacts","onChangeContacts","map","origContact","filter","onMount","onAddContact","AddContactForm","uuid","ContactList","items","cols","Container","reduce","acc","item","length","push","row","Row","key","Col","xs","sm","Question","options","onAnswer","CardHeader","LABEL","text","Table","borderless","onSelect","Option","handleSelect","RESULT","Answer","success","result","onNext","Success","Failure","Stat","Badge","stat","failure","count","MIN","MAX","random","min","max","Math","floor","OPTIONS_COUNT","OPERATIONS","func","x","y","sign","TRIALS_COUNT","randomOption","operation","randomFunc","randomPuzzle","operationIndex","option","includes","sort","a","b","last","EMPTY_STAT","Quiz","handleNext","onChangeQuiz","puzzle","answer","nextStat","handleAnswer","quiz","answerStat","TEXTS","Main","handleContactsSelected","page","handleQuizSelected","handleChangeContacts","handleChangeQuiz","basename","Nav","NavItem","to","activeClassName","innerRef","exact","path","render","ReactDOM","document","getElementById"],"mappings":"ghBAiBeA,G,OAbO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACrB,yBAAKC,UAAU,uBACd,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,uBACd,yBAAKA,UAAU,6BAA6BD,GAC5C,yBAAKC,UAAU,kCACf,yBAAKA,UAAU,6BAAf,e,uFCFGC,G,OACC,8BADDA,EAEE,oCAGFC,EACC,aADDA,EAEE,UAFFA,EAGA,qBAGAC,EAAgB,CACrBC,GAAI,GACJC,KAAM,GACNC,MAAO,GACPC,IAAK,IAGAC,E,YAEL,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KAiEPC,iBAAmB,SAACC,GACnB,EAAKC,SAAS,CACbP,KAAMM,EAAEE,OAAOC,SApEE,EAwEnBC,kBAAoB,SAACJ,GACpB,EAAKC,SAAS,CACbN,MAAOK,EAAEE,OAAOC,SA1EC,EA8EnBE,gBAAkB,SAACL,GAClB,EAAKC,SAAS,CACbL,IAAKI,EAAEE,OAAOC,SAhFG,EAoFnBG,aAAe,WACd,EAAKR,MAAMS,SAASC,IAAEC,MAAM,EAAKC,QAEjC,EAAKC,QAAQC,QAAQC,QAErB,EAAKZ,SAAST,IAtFd,EAAKmB,QAAUG,IAAMC,YAErB,EAAKL,MAAQF,IAAEC,MAAM,EAAKX,MAAMkB,SALd,E,sEASlB,OACC,kBAAC,SAAD,CAAQC,cAAeC,KAAKZ,aAAca,IAAKD,KAAKP,SACnD,kBAAC,UAAD,CACCS,WAAW,qBACXC,KAAK,OACL3B,KAAK,OACL4B,aAAchC,EACdiC,SAAU,CACTC,SAAU,CAACrB,OAAO,IAEnBA,MAAOe,KAAKR,MAAMhB,KAClB+B,SAAUP,KAAKnB,iBACf2B,YAAanC,IAEd,kBAAC,UAAD,CACC6B,WAAW,qBACXC,KAAK,QACL3B,KAAK,QACL4B,aAAchC,EACdiC,SAAU,CACTC,SAAU,CAACrB,OAAO,IAEnBA,MAAOe,KAAKR,MAAMf,MAClB8B,SAAUP,KAAKd,kBACfsB,YAAanC,IAEd,kBAAC,UAAD,CACC6B,WAAW,qBACXC,KAAK,OACL3B,KAAK,MACLS,MAAOe,KAAKR,MAAMd,IAClB6B,SAAUP,KAAKb,gBACfqB,YAAanC,IAEb2B,KAAKpB,MAAM6B,UACX,kBAACC,EAAA,EAAD,CAAQC,SAAO,EACdC,QAASZ,KAAKpB,MAAM6B,SACpBI,MAAM,YACN1C,UAAU,iCACV2C,KAAK,MAEJd,KAAKpB,MAAMmC,aAGd,kBAACL,EAAA,EAAD,CACCP,KAAK,SACLU,MAAM,UACN1C,UAAU,kCACV2C,KAAK,MAEJd,KAAKpB,MAAMoC,kB,GA7DSpB,IAAMqB,WA4GhCtC,EAAYuC,aAAe,CAC1BpB,QAASxB,GAGKK,Q,6CClITwC,G,OACD,MADCA,EAEG,cAmCMC,E,iLA7Bb,OACC,kBAACC,EAAA,EAAD,CAAOC,OAAQtB,KAAKpB,MAAM0C,OAAQnD,UAAU,sBAC3C,kBAACoD,EAAA,EAAD,CAAapD,UAAU,wBAXb,mBAYV,kBAACqD,EAAA,EAAD,KACC,kBAAC,EAAD,CACC1B,QAASE,KAAKpB,MAAMkB,QACpBT,SAAUW,KAAKpB,MAAMS,SACrB2B,YAAaG,EACbV,SAAUT,KAAKpB,MAAM6B,SACrBM,YAAaI,U,GAZcvB,IAAMqB,WCLjCE,EACG,SADHA,EAEG,cAiDMM,E,iLA3Cb,OACC,kBAACJ,EAAA,EAAD,CAAOC,OAAQtB,KAAKpB,MAAM0C,OAAQnD,UAAU,sBAC3C,kBAACoD,EAAA,EAAD,CAAapD,UAAU,wBAZb,kBAaV,kBAACqD,EAAA,EAAD,KACC,yBAAKrD,UAAU,sBACd,8BAAOuD,qCACP,0BAAMvD,UAAU,sBAAsB6B,KAAKpB,MAAMkB,QAAQtB,MACzD,8BAAO,MAER,kBAACkC,EAAA,EAAD,CAAQC,SAAO,EACdC,QAASZ,KAAKpB,MAAM6B,SACpBI,MAAM,YACN1C,UAAU,iCACV2C,KAAK,MAEJK,GAEF,kBAACT,EAAA,EAAD,CACCE,QAASZ,KAAKpB,MAAMS,SACpBwB,MAAM,SACN1C,UAAU,kCACV2C,KAAK,MAEJK,S,GA1B0BvB,IAAMqB,WC8ExBU,G,mBAjFd,WAAY/C,GAAQ,IAAD,8BAClB,4CAAMA,KAwCPgD,gBAAkB,WACjB,EAAK7C,SAAS,CAAE8C,QAAQ,KA1CN,EA6CnBC,gBAAkB,WACjB,EAAK/C,SAAS,CAAE8C,QAAQ,KA9CN,EAiDnBE,gBAAkB,WACjB,EAAKhD,SAAS,CAAEiD,QAAQ,KAlDN,EAqDnBC,gBAAkB,WACjB,EAAKlD,SAAS,CAAEiD,QAAQ,KAtDN,EAyDnBE,oBAAsB,SAACpC,GACtB,EAAKf,SAAS,CAAE8C,QAAQ,IAAS,WAChC,EAAKjD,MAAMuD,gBAAgBrC,OA3DV,EA+DnBsC,oBAAsB,WACrB,EAAKrD,SAAS,CAAEiD,QAAQ,IAAS,WAChC,EAAKpD,MAAMyD,gBAAgB,EAAKzD,MAAMkB,aA9DvC,EAAKN,MAAQ,CACZqC,QAAQ,EACRG,QAAQ,GALS,E,sEAUlB,OACC,kBAACM,EAAA,EAAD,CAAMnE,UAAU,qBACf,kBAACoE,EAAA,EAAD,CAAUpE,UAAU,0BACnB,kBAACqE,EAAA,EAAD,CAAWrE,UAAU,qBACpB,yBAAKA,UAAU,qBAAqB6B,KAAKpB,MAAMkB,QAAQtB,MACvD,yBAAKL,UAAU,sBACd,yBAAKA,UAAU,sBACd,uBAAGA,UAAU,sCAAsCyC,QAASZ,KAAK4B,kBACjE,uBAAGzD,UAAU,qCAAqCyC,QAASZ,KAAK+B,qBAInE,kBAACU,EAAA,EAAD,CAAUtE,UAAU,qBAAqB6B,KAAKpB,MAAMkB,QAAQrB,OAC5D,kBAACgE,EAAA,EAAD,CAAUtE,UAAU,qBAAqB6B,KAAKpB,MAAMkB,QAAQpB,MAE7D,kBAAC,EAAD,CACCoB,QAASE,KAAKpB,MAAMkB,QACpBwB,OAAQtB,KAAKR,MAAMqC,OACnBxC,SAAUW,KAAKkC,oBACfzB,SAAUT,KAAK8B,kBAEhB,kBAAC,EAAD,CACChC,QAASE,KAAKpB,MAAMkB,QACpBwB,OAAQtB,KAAKR,MAAMwC,OACnB3C,SAAUW,KAAKoC,oBACf3B,SAAUT,KAAKiC,uB,GArCMrC,IAAMqB,YCI1BE,G,OACA,eAGAuB,E,2MAwBLC,iBAAmB,SAAC7C,GACnB,IAAM8C,EAAQ,sBAAO,EAAKhE,MAAMgE,UAAlB,CAA4B9C,IAC1C,EAAKlB,MAAMiE,iBAAiBD,I,EAG7BV,oBAAsB,SAACpC,GACtB,IAAM8C,EAAW,EAAKhE,MAAMgE,SAASE,KAAI,SAACC,GAAD,OACxCA,EAAYxE,KAAOuB,EAAQvB,GAAKuB,EAAUiD,KAE3C,EAAKnE,MAAMiE,iBAAiBD,I,EAG7BR,oBAAsB,SAACtC,GACtB,IAAM8C,EAAWtD,IAAE0D,OAAO,EAAKpE,MAAMgE,UACpC,SAACG,GAAD,OAAkBA,EAAYxE,KAAOuB,EAAQvB,MAE9C,EAAKK,MAAMiE,iBAAiBD,I,mFArC5B5C,KAAKpB,MAAMqE,Y,+BAIX,OACC,yBAAK9E,UAAU,kBACd,yBAAKA,UAAU,8BACd,kBAAC,EAAD,CAAgB+E,aAAclD,KAAK2C,oBAEpC,6BACA,yBAAKxE,UAAU,2BACd,kBAAC,EAAD,CACCyE,SAAU5C,KAAKpB,MAAMgE,SACrBT,gBAAiBnC,KAAKkC,oBACtBG,gBAAiBrC,KAAKoC,4B,GAjBLxC,IAAMqB,WA4CvBkC,E,2MAeLR,iBAAmB,SAAC7C,GACnBA,EAAQvB,GAAK6E,MACb,EAAKxE,MAAMsE,aAAapD,I,wEAdxB,OACC,kBAACwC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAUpE,UAAU,uBACnB,kBAAC,EAAD,CACCkB,SAAUW,KAAK2C,iBACf3B,YAAaG,U,GARUvB,IAAMqB,WAqB7BoC,EAAc,SAAC,GAAD,IAkBNC,EAAOC,EAlBEX,EAAH,EAAGA,SAAUT,EAAb,EAAaA,gBAAiBE,EAA9B,EAA8BA,gBAA9B,OACnB,kBAACmB,EAAA,EAAD,CAAWrF,UAAU,2BAiBRmF,EAhBNV,EAgBaW,EAhBH,EAiBVD,EAAMG,QAAO,SAACC,EAAKC,GAMzB,OALmB,IAAfD,EAAIE,QAAgBF,EAAIA,EAAIE,OAAS,GAAGA,SAAWL,EACtDG,EAAIG,KAAK,CAAEF,IAEXD,EAAIA,EAAIE,OAAS,GAAGC,KAAKF,GAEnBD,IACL,KAxBiBZ,KAAI,SAACgB,GAAD,OACtB,kBAACC,EAAA,EAAD,CAAKC,IAAKF,EAAI,GAAGvF,IACfuF,EAAIhB,KAAI,SAAChD,GAAD,OACR,kBAACmE,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIhG,UAAU,+BAA+B6F,IAAKlE,EAAQvB,IACzE,kBAAC,EAAD,CACCuB,QAASA,EACTqC,gBAAiBA,EACjBE,gBAAiBA,cA+BTK,S,UChHT0B,I,+LAGJ,IAAMC,EAAUrE,KAAKpB,MAAMyF,QACrBC,EAAWtE,KAAKpB,MAAM0F,SAE5B,OACC,kBAAChC,EAAA,EAAD,CAAMnE,UAAU,cACf,kBAACoG,EAAA,EAAD,CAAYpG,UAAU,gBACpBqG,YAAcxE,KAAKpB,MAAM6F,MAE3B,kBAAClC,EAAA,EAAD,CAAUpE,UAAU,kBACnB,kBAACuG,GAAA,EAAD,CACCvG,UAAU,kBACVwG,YAAY,GAEZ,+BACC,4BACC,4BAAI,kBAAC,GAAD,CAAQ1F,MAAOoF,EAAQ,GAAIO,SAAUN,KACzC,4BAAI,kBAAC,GAAD,CAAQrF,MAAOoF,EAAQ,GAAIO,SAAUN,MAE1C,4BACC,4BAAI,kBAAC,GAAD,CAAQrF,MAAOoF,EAAQ,GAAIO,SAAUN,KACzC,4BAAI,kBAAC,GAAD,CAAQrF,MAAOoF,EAAQ,GAAIO,SAAUN,c,GAvB1B1E,IAAMqB,YAiCvB4D,G,2MAeLC,aAAe,WACd,EAAKlG,MAAMgG,SAAS,EAAKhG,MAAMK,Q,wEAb/B,OACC,kBAACyB,EAAA,EAAD,CACCvC,UAAU,mBACV0C,MAAM,UACNC,KAAK,KACLF,QAASZ,KAAK8E,cAEb9E,KAAKpB,MAAMK,W,GAVKW,IAAMqB,WA+BZmD,MCjETW,I,OACI,8CADJA,GAEI,8CAIJC,G,iLAGJ,OACC,kBAAC1C,EAAA,EAAD,CAAMnE,UAAU,cACf,kBAACoG,EAAA,EAAD,CAAYpG,UAAU,gBAZZ,eAeV,kBAACoE,EAAA,EAAD,CAAUpE,UAAU,gBACnB,kBAACqE,EAAA,EAAD,KACC,0BAAMrE,UAAW6B,KAAKpB,MAAMqG,QAAU,eAAiB,eACrD,GAAKjF,KAAKpB,MAAMsG,SAGnB,kBAACzC,EAAA,EAAD,KACEzC,KAAKpB,MAAMqG,QAAU,kBAAC,GAAD,MAAc,kBAAC,GAAD,OAErC,kBAACvE,EAAA,EAAD,CACCG,MAAM,UACNC,KAAK,KACLF,QAASZ,KAAKpB,MAAMuG,QAtBb,iC,GAEQvF,IAAMqB,WA8BrBmE,GAAU,kBACf,8BAAM,uBAAGjH,UAAU,qCAAwC4G,KAGtDM,GAAU,kBACf,8BAAM,uBAAGlH,UAAU,oCAAuC4G,KAS5CC,M,UCvBAM,I,wLA3Bb,OACC,wBAAInH,UAAU,qBACb,kBAACoH,GAAA,EAAD,CAAO1E,MAAM,UAAU1C,UAAU,0BAChC,uBAAGA,UAAU,wBACZ6B,KAAKpB,MAAM4G,KAAKP,SAElB,kBAACM,GAAA,EAAD,CAAO1E,MAAM,SAAS1C,UAAU,0BAC/B,uBAAGA,UAAU,wBACZ6B,KAAKpB,MAAM4G,KAAKC,SAElB,kBAACF,GAAA,EAAD,CAAO1E,MAAM,YAAY1C,UAAU,2BAClC,uBAAGA,UAAU,mBACZ6B,KAAKpB,MAAM4G,KAAKE,Y,GAfH9F,IAAMqB,YCPnB0E,GAAM,EACNC,GAAM,GAUGC,OAPf,WAAmC,IAAnBC,EAAkB,uDAAdH,GAAKI,EAAS,uDAALH,GAC5B,GAAIE,EAAMC,EAAK,CAAC,IAAD,EACD,CAACA,EAAKD,GAAlBA,EADa,KACRC,EADQ,KAGf,OAAOC,KAAKC,MAAMD,KAAKH,UAAYE,EAAM,EAAID,IAAQA,GCNhDI,GAAgB,EAEhBN,GAAM,GAENO,GAAa,CAAC,CACnBC,KAAM,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,GACrBC,KAAM,KACJ,CACFH,KAAM,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,GACrBC,KAAM,KACJ,CACFH,KAAM,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,GACrBC,KAAM,MAGDC,GAAe,IAqDrB,SAASC,GAAaC,EAAWL,EAAGC,EAAGpB,EAAQyB,GAE9C,OAAQD,EAAUH,MACjB,IAAK,IACJ,OAAOI,EAAWX,KAAKD,IAAIM,EAAGC,GAAa,EAATpB,EAAa,GAEhD,IAAK,IACJ,OAAOyB,GAAYf,GAAKS,GAEzB,QAEC,OAAOnB,EACNyB,EAAW,EAAG,GAAKA,EAAW,EAAG,IAAMN,EACvCM,EAAW,EAAG,GAAKA,EAAW,EAAG,GAAKL,GAI3BM,OA1Df,WAaC,IAb2C,IAAtBD,EAAqB,uDAARd,GAE5BQ,EAAIM,IACJL,EAAIK,IACJE,EAAiBF,EAAW,EAAG,GAC/BD,EAAYP,GAAWU,GACvB3B,EAASwB,EAAUN,KAAKC,EAAGC,GAG7BjC,EAAU,CAAEa,GAGZQ,EAAQ,EACLrB,EAAQT,OAASsC,IAAiBR,IAAUc,IAAc,CAChE,IAAMM,EAASL,GAAaC,EAAWL,EAAGC,EAAGpB,EAAQyB,GAChDtC,EAAQ0C,SAASD,IACrBzC,EAAQR,KAAKiD,GAQf,IAHAzC,EAAQ2C,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,KAGrB7C,EAAQT,OAASsC,IAAe,CACtC,IAAMiB,EAAO9C,EAAQA,EAAQT,OAAS,GACtCS,EAAQR,KAAKsD,EAAO,GAOrB,MAAO,CACN1C,KAJiB4B,EAAI,IAAMK,EAAUH,KAAO,IAAMD,EAKlDjC,UACAa,WCxDIkC,GAAa,CAClBnC,QAAS,EACTQ,QAAS,EACTC,MAAO,GA8FO2B,G,2MA1DdC,WAAa,WACZ,EAAK1I,MAAM2I,aAAa,CACvBC,OAAQZ,KACRa,OAAQ,KACRjC,KAAM,EAAKkC,c,EAIbC,aAAe,SAACF,GACf,IAAMG,EAAO,EAAKhJ,MAAMgJ,KAExB,EAAKhJ,MAAM2I,aAAa,CACvBC,OAAQI,EAAKJ,OACbC,SACAjC,KAAM,EAAKqC,WAAWJ,IAAWG,EAAKJ,OAAOtC,W,mFA5C9ClF,KAAKpB,MAAMqE,UAEa,OAApBjD,KAAKpB,MAAMgJ,MACd5H,KAAKsH,e,+BAKN,IAAMM,EAAO5H,KAAKpB,MAAMgJ,KAExB,OAAOA,EACN,6BACkB,OAAhBA,EAAKH,OACL,kBAAC,GAAD,CACCxC,QAAS2C,EAAKH,SAAWG,EAAKJ,OAAOtC,OACrCA,OAAQ0C,EAAKJ,OAAOtC,OACpBC,OAAQnF,KAAKsH,aAGd,kBAAC,GAAD,CACC7C,KAAMmD,EAAKJ,OAAO/C,KAClBJ,QAASuD,EAAKJ,OAAOnD,QACrBC,SAAUtE,KAAK2H,eAGjB,kBAAC,GAAD,CAAMnC,KAAMoC,EAAKpC,QAEf,O,iCAsBJ,IAAMoC,EAAO5H,KAAKpB,MAAMgJ,KAClBpC,EAAOoC,EAAOA,EAAKpC,KAAO4B,GAEhC,MAAO,CACNnC,QAASO,EAAKP,QACdQ,QAASD,EAAKC,QACdC,MAAOF,EAAKE,MAAQ,K,iCAIXT,GACV,IAAMO,EAAOxF,KAAKpB,MAAMgJ,KAAKpC,KAE7B,MAAO,CACNP,QAASO,EAAKP,SAAWA,EAAU,EAAI,GACvCQ,QAASD,EAAKC,SAAWR,EAAU,EAAI,GACvCS,MAAOF,EAAKE,W,GApEI9F,IAAMqB,WCLnB6G,I,OAAQ,CACblF,SAAU,WACVgF,KAAM,YA0EQG,G,YArEd,WAAYnJ,GAAQ,IAAD,8BAClB,4CAAMA,KAmDPoJ,uBAAyB,WACxB,EAAKjJ,SAAS,CAAEkJ,KAAM,cArDJ,EAwDnBC,mBAAqB,WACpB,EAAKnJ,SAAS,CAAEkJ,KAAM,UAzDJ,EA4DnBE,qBAAuB,SAACvF,GACvB,EAAK7D,SAAS,CAAE6D,cA7DE,EAgEnBwF,iBAAmB,SAACR,GACnB,EAAK7I,SAAS,CAAE6I,UA9DhB,EAAKpI,MAAQ,CACZyI,KAAM,KACNrF,SAAU,GACVgF,KAAM,MANW,E,sEAUT,IAAD,OACR,OACC,kBAAC,IAAD,CAAQS,SAAS,SAChB,kBAAC/F,EAAA,EAAD,CAAMnE,UAAU,eACf,kBAACoG,EAAA,EAAD,CAAYpG,UAAU,sBACrB,kBAAC,EAAD,CAAeD,MAAO4J,GAAM9H,KAAKR,MAAMyI,SAExC,kBAAC1F,EAAA,EAAD,CAAUpE,UAAU,oBACnB,kBAACmK,EAAA,EAAD,CAAKnK,UAAU,aACd,kBAACoK,EAAA,EAAD,KACC,kBAAC,IAAD,CAASC,GAAG,YAAYC,gBAAgB,WAAWC,SAAU,SAAC9F,GAAc,EAAKA,SAAWA,IAA5F,aAED,kBAAC2F,EAAA,EAAD,KACC,kBAAC,IAAD,CAASC,GAAG,UAAUC,gBAAgB,WAAWC,SAAU,SAACd,GAAU,EAAKA,KAAOA,IAAlF,aAIF,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAO,kBAAC,IAAD,CAAUL,GAAG,iBAClD,kBAAC,IAAD,CAAOI,KAAK,YAAYC,OAAQ,kBAC9B,kBAAC,GAAD,CACC5F,QAAS,EAAK+E,uBACdpF,SAAU,EAAKpD,MAAMoD,SACrBC,iBAAkB,EAAKsF,0BAI1B,kBAAC,IAAD,CAAOS,KAAK,UAAUC,OAAQ,kBAC5B,kBAAC,GAAD,CACC5F,QAAS,EAAKiF,mBACdN,KAAM,EAAKpI,MAAMoI,KACjBL,aAAc,EAAKa,8B,GA3CVxI,IAAMqB,W,OCRzB6H,IAASD,OAAO,kBAAC,GAAD,MAAUE,SAASC,eAAe,W","file":"static/js/main.8891fa3f.chunk.js","sourcesContent":["import React from 'react';\n\nimport './HeaderContent.scss';\n\nconst HeaderContent = ({ title }) => (\n\t<div className=\"HeaderContent__root\">\n\t\t<div className=\"HeaderContent__circle\" />\n\t\t<div className=\"HeaderContent__circle\" />\n\t\t<div className=\"HeaderContent__circle\" />\n\t\t<div className=\"HeaderContent__text\">\n\t\t\t<div className=\"HeaderContent__text-title\">{title}</div>\n\t\t\t<div className=\"HeaderContent__text-separator\"></div>\n\t\t\t<div className=\"HeaderContent__text-label\">JS test</div>\n\t\t</div>\n\t</div>\n);\n\nexport default HeaderContent;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport _ from 'lodash';\nimport { Button } from 'reactstrap';\n\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\n\nimport './ContactForm.scss';\n\nconst FEEDBACK = {\n\tname: \"Prosím zadejte jméno\",\n\temail: \"Prosím zadejte platný email\"\n};\n\nconst PLACEHOLDER = {\n\tname: \"Jméno *\",\n\temail: \"Email *\",\n\ttel: \"Tel. číslo\"\n};\n\nconst EMPTY_CONTACT = {\n\tid: '',\n\tname: '',\n\temail: '',\n\ttel: ''\n};\n\nclass ContactForm extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.formRef = React.createRef();\n\n\t\tthis.state = _.clone(this.props.contact);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<AvForm onValidSubmit={this.handleSubmit} ref={this.formRef}>\n\t\t\t\t<AvField\n\t\t\t\t\tinputClass=\"ContactForm__input\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\terrorMessage={FEEDBACK['name']}\n\t\t\t\t\tvalidate={{\n\t\t\t\t\t\trequired: {value: true}\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\tonChange={this.handleNameChange}\n\t\t\t\t\tplaceholder={PLACEHOLDER['name']}\n\t\t\t\t/>\n\t\t\t\t<AvField\n\t\t\t\t\tinputClass=\"ContactForm__input\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\terrorMessage={FEEDBACK['email']}\n\t\t\t\t\tvalidate={{\n\t\t\t\t\t\trequired: {value: true}\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\tonChange={this.handleEmailChange}\n\t\t\t\t\tplaceholder={PLACEHOLDER['email']}\n\t\t\t\t/>\n\t\t\t\t<AvField\n\t\t\t\t\tinputClass=\"ContactForm__input\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"tel\"\n\t\t\t\t\tvalue={this.state.tel}\n\t\t\t\t\tonChange={this.handleTelChange}\n\t\t\t\t\tplaceholder={PLACEHOLDER['tel']}\n\t\t\t\t/>\n\t\t\t\t{this.props.onCancel &&\n\t\t\t\t\t<Button outline\n\t\t\t\t\t\tonClick={this.props.onCancel}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tclassName=\"float-left ContactForm__button\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.cancelLabel}\n\t\t\t\t\t</Button>\n\t\t\t\t}\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclassName=\"float-right ContactForm__button\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t>\n\t\t\t\t\t{this.props.submitLabel}\n\t\t\t\t</Button>\n\t\t\t</AvForm>\n\n\t\t);\n\t}\n\n\thandleNameChange = (e) => {\n\t\tthis.setState({\n\t\t\tname: e.target.value,\n\t\t});\n\t};\n\n\thandleEmailChange = (e) => {\n\t\tthis.setState({\n\t\t\temail: e.target.value\n\t\t});\n\t};\n\n\thandleTelChange = (e) => {\n\t\tthis.setState({\n\t\t\ttel: e.target.value,\n\t\t});\n\t};\n\n\thandleSubmit = () => {\n\t\tthis.props.onSubmit(_.clone(this.state));\n\n\t\tthis.formRef.current.reset();\n\n\t\tthis.setState(EMPTY_CONTACT);\n\t}\n}\n\nContactForm.propTypes = {\n\tcontact: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\tname: PropTypes.string.isRequired,\n\t\temail: PropTypes.string.isRequired,\n\t\ttel: PropTypes.string.isRequired\n\t}),\n\tonSubmit: PropTypes.func.isRequired,\n\tsubmitLabel: PropTypes.string.isRequired,\n\tonCancel: PropTypes.func,\n\tcancelLabel: PropTypes.string\n};\n\nContactForm.defaultProps = {\n\tcontact: EMPTY_CONTACT\n};\n\nexport default ContactForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nimport ContactForm from './ContactForm';\n\nimport './ContactModal.scss';\n\nconst TITLE = \"Upravit kontakt\";\nconst LABELS = {\n\tok: 'OK',\n\tcancel: 'ZRUŠIT'\n};\n\nclass UpdateContactModal extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal isOpen={this.props.isOpen} className=\"ContactModal__root\">\n\t\t\t\t<ModalHeader className=\"ContactModal__header\">{TITLE}</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<ContactForm\n\t\t\t\t\t\tcontact={this.props.contact}\n\t\t\t\t\t\tonSubmit={this.props.onSubmit}\n\t\t\t\t\t\tsubmitLabel={LABELS['ok']}\n\t\t\t\t\t\tonCancel={this.props.onCancel}\n\t\t\t\t\t\tcancelLabel={LABELS['cancel']}\n\t\t\t\t\t/>\n\t\t\t\t</ModalBody>\n\t\t\t</Modal>\n\t\t);\n\t}\n}\n\nUpdateContactModal.propTypes = {\n\tcontact: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\tname: PropTypes.string.isRequired,\n\t\temail: PropTypes.string.isRequired,\n\t\ttel: PropTypes.string.isRequired\n\t}).isRequired,\n\tonSubmit: PropTypes.func.isRequired,\n\tonCancel: PropTypes.func.isRequired,\n\tisOpen: PropTypes.bool.isRequired\n};\n\nexport default UpdateContactModal;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nimport './ContactModal.scss';\nimport './ContactForm.scss';\n\nconst TITLE = \"Smazat kontakt\";\nconst TEXT = \"Potvrd'te smazání kontaktu\";\nconst LABELS = {\n\tdelete: 'SMAZAT',\n\tcancel: 'ZRUŠIT'\n};\n\nclass DeleteContactModal extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal isOpen={this.props.isOpen} className=\"ContactModal__root\">\n\t\t\t\t<ModalHeader className=\"ContactModal__header\">{TITLE}</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<div className=\"ContactModal__text\">\n\t\t\t\t\t\t<span>{TEXT + \" \"}</span>\n\t\t\t\t\t\t<span className=\"ContactModal__name\">{this.props.contact.name}</span>\n\t\t\t\t\t\t<span>{\".\"}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Button outline\n\t\t\t\t\t\tonClick={this.props.onCancel}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tclassName=\"float-left ContactForm__button\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{LABELS['cancel']}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={this.props.onSubmit}\n\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\tclassName=\"float-right ContactForm__button\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{LABELS['delete']}\n\t\t\t\t\t</Button>\n\t\t\t\t</ModalBody>\n\t\t\t</Modal>\n\t\t);\n\t}\n}\n\nDeleteContactModal.propTypes = {\n\tcontact: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\tname: PropTypes.string.isRequired,\n\t\temail: PropTypes.string.isRequired,\n\t\ttel: PropTypes.string.isRequired\n\t}).isRequired,\n\tonSubmit: PropTypes.func.isRequired,\n\tonCancel: PropTypes.func.isRequired,\n\tisOpen: PropTypes.bool.isRequired\n};\n\nexport default DeleteContactModal;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card, CardBody, CardTitle, CardText } from 'reactstrap';\n\nimport UpdateContactModal from './UpdateContactModal';\nimport DeleteContactModal from './DeleteContactModal';\n\nimport './ContactCard.scss';\n\nclass ContactCard extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tupdate: false,\n\t\t\tdelete: false\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Card className=\"ContactCard__card\">\n\t\t\t\t<CardBody className=\"ContactCard__card-body\">\n\t\t\t\t\t<CardTitle className=\"ContactCard__text\">\n\t\t\t\t\t\t<div className=\"ContactCard__name\">{this.props.contact.name}</div>\n\t\t\t\t\t\t<div className=\"ContactCard__icons\">\n\t\t\t\t\t\t\t<div className=\"float-right d-flex\">\n\t\t\t\t\t\t\t\t<i className=\"fas fa-pencil-alt ContactCard__icon\" onClick={this.showUpdateModal}></i>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-trash-alt ContactCard__icon\" onClick={this.showDeleteModal}></i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</CardTitle>\n\t\t\t\t\t<CardText className=\"ContactCard__text\">{this.props.contact.email}</CardText>\n\t\t\t\t\t<CardText className=\"ContactCard__text\">{this.props.contact.tel}</CardText>\n\t\t\t\t</CardBody>\n\t\t\t\t<UpdateContactModal\n\t\t\t\t\tcontact={this.props.contact}\n\t\t\t\t\tisOpen={this.state.update}\n\t\t\t\t\tonSubmit={this.handleUpdateContact}\n\t\t\t\t\tonCancel={this.hideUpdateModal}\n\t\t\t\t/>\n\t\t\t\t<DeleteContactModal\n\t\t\t\t\tcontact={this.props.contact}\n\t\t\t\t\tisOpen={this.state.delete}\n\t\t\t\t\tonSubmit={this.handleDeleteContact}\n\t\t\t\t\tonCancel={this.hideDeleteModal}\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t);\n\t}\n\n\tshowUpdateModal = () => {\n\t\tthis.setState({ update: true });\n\t};\n\n\thideUpdateModal = () => {\n\t\tthis.setState({ update: false });\n\t};\n\n\tshowDeleteModal = () => {\n\t\tthis.setState({ delete: true });\n\t};\n\n\thideDeleteModal = () => {\n\t\tthis.setState({ delete: false });\n\t};\n\n\thandleUpdateContact = (contact) => {\n\t\tthis.setState({ update: false }, () => {\n\t\t\tthis.props.onUpdateContact(contact);\n\t\t});\n\t}\n\n\thandleDeleteContact = () => {\n\t\tthis.setState({ delete: false }, () => {\n\t\t\tthis.props.onDeleteContact(this.props.contact);\n\t\t});\n\t}\n}\n\nContactCard.propTypes = {\n\tcontact: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\tname: PropTypes.string.isRequired,\n\t\temail: PropTypes.string.isRequired,\n\t\ttel: PropTypes.string.isRequired\n\t}).isRequired,\n\tonUpdateContact: PropTypes.func.isRequired,\n\tonDeleteContact: PropTypes.func.isRequired\n};\n\nexport default ContactCard;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport _ from 'lodash';\n\nimport { Card, CardBody } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport uuid from 'uuid/v1';\n\nimport ContactForm from './contacts/ContactForm';\nimport ContactCard from './contacts/ContactCard';\n\nimport './Contacts.scss';\n\nconst LABELS = {\n\tadd: \"PŘIDAT\"\n};\n\nclass Contacts extends React.Component {\n\n\tcomponentDidMount() {\n\t\tthis.props.onMount();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Contacts__root\">\n\t\t\t\t<div className=\"Contacts__add-contact-form\">\n\t\t\t\t\t<AddContactForm onAddContact={this.handleAddContact} />\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"Contacts__contacts-list\">\n\t\t\t\t\t<ContactList\n\t\t\t\t\t\tcontacts={this.props.contacts}\n\t\t\t\t\t\tonUpdateContact={this.handleUpdateContact}\n\t\t\t\t\t\tonDeleteContact={this.handleDeleteContact}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\thandleAddContact = (contact) => {\n\t\tconst contacts = [...this.props.contacts, contact];\n\t\tthis.props.onChangeContacts(contacts);\n\t};\n\n\thandleUpdateContact = (contact) => {\n\t\tconst contacts = this.props.contacts.map((origContact) => (\n\t\t\torigContact.id === contact.id ? contact : origContact\n\t\t));\n\t\tthis.props.onChangeContacts(contacts);\n\t};\n\n\thandleDeleteContact = (contact) => {\n\t\tconst contacts = _.filter(this.props.contacts,\n\t\t\t(origContact) => (origContact.id !== contact.id)\n\t\t);\n\t\tthis.props.onChangeContacts(contacts);\n\t};\n}\n\nclass AddContactForm extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Card>\n\t\t\t\t<CardBody className=\"Contacts__card-body\">\n\t\t\t\t\t<ContactForm\n\t\t\t\t\t\tonSubmit={this.handleAddContact}\n\t\t\t\t\t\tsubmitLabel={LABELS['add']}\n\t\t\t\t\t/>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t);\n\t}\n\n\thandleAddContact = (contact) => {\n\t\tcontact.id = uuid();\n\t\tthis.props.onAddContact(contact);\n\t};\n}\n\nconst ContactList = ({ contacts, onUpdateContact, onDeleteContact }) => (\n\t<Container className=\"ContactList__container\">\n\t\t{rows(contacts, 3).map((row) => (\n\t\t\t<Row key={row[0].id}>\n\t\t\t\t{row.map((contact) => (\n\t\t\t\t\t<Col xs=\"12\" sm=\"4\" className=\"d-flex ContactList__item-col\" key={contact.id}>\n\t\t\t\t\t\t<ContactCard\n\t\t\t\t\t\t\tcontact={contact}\n\t\t\t\t\t\t\tonUpdateContact={onUpdateContact}\n\t\t\t\t\t\t\tonDeleteContact={onDeleteContact}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t))}\n\t\t\t</Row>\n\t\t))}\n\t</Container>\n);\n\nfunction rows(items, cols) {\n\treturn items.reduce((acc, item) => {\n\t\tif (acc.length === 0 || acc[acc.length - 1].length === cols) {\n\t\t\tacc.push([ item ]);\n\t\t} else {\n\t\t\tacc[acc.length - 1].push(item);\n\t\t}\n\t\treturn acc;\n\t}, []);\n}\n\nContacts.propTypes = {\n\tonMount: PropTypes.func.isRequired,\n\tcontacts: PropTypes.arrayOf(PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\tname: PropTypes.string.isRequired,\n\t\temail: PropTypes.string.isRequired,\n\t\ttel: PropTypes.string.isRequired\n\t})).isRequired,\n\tonChangeContacts: PropTypes.func.isRequired\n};\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { Table, Button } from 'reactstrap';\n\nimport './Quiz.scss';\nimport './Question.scss';\n\nconst LABEL = \"Kolik je\";\n\nclass Question extends React.Component {\n\n\trender() {\n\t\tconst options = this.props.options;\n\t\tconst onAnswer = this.props.onAnswer;\n\n\t\treturn (\n\t\t\t<Card className=\"Quiz__root\">\n\t\t\t\t<CardHeader className=\"Quiz__header\">\n\t\t\t\t\t{LABEL + \" \" + this.props.text}\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody className=\"Question__body\">\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName=\"Question__table\"\n\t\t\t\t\t\tborderless={true}\n\t\t\t\t\t>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><Option value={options[0]} onSelect={onAnswer} /></td>\n\t\t\t\t\t\t\t\t<td><Option value={options[1]} onSelect={onAnswer} /></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><Option value={options[2]} onSelect={onAnswer} /></td>\n\t\t\t\t\t\t\t\t<td><Option value={options[3]} onSelect={onAnswer} /></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\nclass Option extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tclassName=\"Question__button\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tsize=\"sm\"\n\t\t\t\tonClick={this.handleSelect}\n\t\t\t>\n\t\t\t\t{this.props.value}\n\t\t\t</Button>\n\t\t);\n\t}\n\n\thandleSelect = () => {\n\t\tthis.props.onSelect(this.props.value);\n\t};\n}\n\nOption.propTypes = {\n\tvalue: PropTypes.number.isRequired,\n\tonSelect: PropTypes.func.isRequired\n};\n\nQuestion.propTypes = {\n\ttext: PropTypes.string.isRequired,\n\toptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n\tonAnswer: PropTypes.func.isRequired\n};\n\nexport default Question;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card, CardHeader, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { Button } from 'reactstrap';\n\nimport './Quiz.scss';\nimport './Answer.scss';\n\nconst LABEL = \"Výsledek\";\nconst RESULT = {\n\tsuccess: \"Odpověděli jste správně.\",\n\tfailure: \"Odpověděli jste špatně.\"\n};\nconst NEXT = \"DALŠÍ OTÁZKA\";\n\nclass Answer extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Card className=\"Quiz__root\">\n\t\t\t\t<CardHeader className=\"Quiz__header\">\n\t\t\t\t\t{LABEL}\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody className=\"Answer__body\">\n\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t<span className={this.props.success ? \"text-success\" : \"text-danger\"}>\n\t\t\t\t\t\t\t{\"\" + this.props.result}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</CardTitle>\n\t\t\t\t\t<CardText>\n\t\t\t\t\t\t{this.props.success ? <Success /> : <Failure />}\n\t\t\t\t\t</CardText>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\tonClick={this.props.onNext}\n\t\t\t\t\t>\n\t\t\t\t\t\t{NEXT}\n\t\t\t\t\t</Button>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\nconst Success = () => (\n\t<span><i className=\"fas fa-check-circle text-success\"></i>{RESULT['success']}</span>\n);\n\nconst Failure = () => (\n\t<span><i className=\"fas fa-times-circle text-danger\"></i>{RESULT['failure']}</span>\n);\n\nAnswer.propTypes = {\n\tsuccess: PropTypes.bool.isRequired,\n\tresult: PropTypes.number.isRequired,\n\tonNext: PropTypes.func.isRequired\n};\n\nexport default Answer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Badge } from 'reactstrap';\n\nimport './Stat.scss';\n\nclass Stat extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<h3 className=\"d-flex Stat__root\">\n\t\t\t\t<Badge color=\"success\" className=\"Stat__badge float-left\">\n\t\t\t\t\t<i className=\"fas fa-check-circle\"></i>\n\t\t\t\t\t{this.props.stat.success}\n\t\t\t\t</Badge>\n\t\t\t\t<Badge color=\"danger\" className=\"Stat__badge float-left\">\n\t\t\t\t\t<i className=\"fas fa-times-circle\"></i>\n\t\t\t\t\t{this.props.stat.failure}\n\t\t\t\t</Badge>\n\t\t\t\t<Badge color=\"secondary\" className=\"Stat__badge float-right\">\n\t\t\t\t\t<i className=\"fas fa-list-ol\"></i>\n\t\t\t\t\t{this.props.stat.count}\n\t\t\t\t</Badge>\n\t\t\t</h3>\n\t\t);\n\t}\n}\n\nStat.propTypes = {\n\tstat: PropTypes.shape({\n\t\tsuccess: PropTypes.number.isRequired,\n\t\tfailure: PropTypes.number.isRequired,\n\t\tcount: PropTypes.number.isRequired\n\t}).isRequired\n};\n\nexport default Stat;\n\n","const MIN = 1;\nconst MAX = 20;\n\n// random number between min (included) and max (included)\nfunction random(min=MIN, max=MAX) {\n\tif (min > max) {\n\t\t[min, max] = [max, min];\n\t}\n\treturn Math.floor(Math.random() * (max + 1 - min)) + min;\n}\n\nexport default random;","import random from './random';\n\nconst OPTIONS_COUNT = 4;\n\nconst MAX = 20;\n\nconst OPERATIONS = [{\n\tfunc: (x, y) => (x + y),\n\tsign: \"+\"\n}, {\n\tfunc: (x, y) => (x - y),\n\tsign: \"-\"\n}, {\n\tfunc: (x, y) => (x * y),\n\tsign: \"*\"\n}];\n\nconst TRIALS_COUNT = 1000;\n\n/**\n * Returns randomly generated puzzle in form of:\n *\n * {\n *\t\ttext: <puzzle text as string, e.g. \"3 * 7\">\n *\t\toptions: <array of options in ascending order, one of them is the result, e.g. [15, 17, 21, 23]>\n * \t\tresult: <the correct result, e.g. \"21\">\n * }\n *\n */\nfunction randomPuzzle(randomFunc = random) {\n\n\tconst x = randomFunc();\n\tconst y = randomFunc();\n\tconst operationIndex = randomFunc(0, 2);\n\tconst operation = OPERATIONS[operationIndex];\n\tconst result = operation.func(x, y);\n\n\t// start with the correct result\n\tlet options = [ result ];\n\n\t// add different random options, limit trials just in case...\n\tlet count = 0;\n\twhile (options.length < OPTIONS_COUNT && count++ < TRIALS_COUNT) {\n\t\tconst option = randomOption(operation, x, y, result, randomFunc);\n\t\tif (!options.includes(option)) {\n\t\t\toptions.push(option);\n\t\t}\n\t}\n\n\t// sort the options\n\toptions.sort((a, b) => (a - b));\n\n\t// just in case: fill missing options deterministically\n\twhile (options.length < OPTIONS_COUNT) {\n\t\tconst last = options[options.length - 1];\n\t\toptions.push(last + 2);\n\t}\n\n\t// the puzzle text\n\tconst text = \"\" + x + \" \" + operation.sign + \" \" + y;\n\n\t// construct the puzzle\n\treturn {\n\t\ttext,\n\t\toptions,\n\t\tresult\n\t};\n}\n\n// random false result option based on arguments and operation\nfunction randomOption(operation, x, y, result, randomFunc) {\n\n\tswitch (operation.sign) {\n\t\tcase \"+\":\n\t\t\treturn randomFunc(Math.max(x, y), result * 2 + 8);\n\n\t\tcase \"-\":\n\t\t\treturn randomFunc(-MAX, x);\n\n\t\tdefault:\n\t\t\t// \"*\": just do something crazy depending on x and y :-)\n\t\t\treturn result +\n\t\t\t\trandomFunc(0, 1) * randomFunc(0, 10) * x -\n\t\t\t\trandomFunc(0, 1) * randomFunc(0, 3) * y;\n\t}\n}\n\nexport default randomPuzzle;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Question from './quiz/Question';\nimport Answer from './quiz/Answer';\nimport Stat from './quiz/Stat';\n\nimport randomPuzzle from '../data/randomPuzzle';\n\nconst EMPTY_STAT = {\n\tsuccess: 0,\n\tfailure: 0,\n\tcount: 0\n};\n\nclass Quiz extends React.Component {\n\n\tcomponentDidMount() {\n\t\tthis.props.onMount();\n\n\t\tif (this.props.quiz === null) {\n\t\t\tthis.handleNext();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst quiz = this.props.quiz;\n\n\t\treturn quiz ? (\n\t\t\t<div>\n\t\t\t\t{quiz.answer !== null ? \n\t\t\t\t\t<Answer\n\t\t\t\t\t\tsuccess={quiz.answer === quiz.puzzle.result}\n\t\t\t\t\t\tresult={quiz.puzzle.result}\n\t\t\t\t\t\tonNext={this.handleNext}\n\t\t\t\t\t/>\n\t\t\t\t:\n\t\t\t\t\t<Question\n\t\t\t\t\t\ttext={quiz.puzzle.text}\n\t\t\t\t\t\toptions={quiz.puzzle.options}\n\t\t\t\t\t\tonAnswer={this.handleAnswer}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t<Stat stat={quiz.stat} />\n\t\t\t</div>\n\t\t) : null;\n\t}\n\n\thandleNext = () => {\n\t\tthis.props.onChangeQuiz({\n\t\t\tpuzzle: randomPuzzle(),\n\t\t\tanswer: null,\n\t\t\tstat: this.nextStat()\n\t\t});\n\t};\n\n\thandleAnswer = (answer) => {\n\t\tconst quiz = this.props.quiz;\n\n\t\tthis.props.onChangeQuiz({\n\t\t\tpuzzle: quiz.puzzle,\n\t\t\tanswer,\n\t\t\tstat: this.answerStat(answer === quiz.puzzle.result)\n\t\t});\n\t};\n\n\tnextStat() {\n\t\tconst quiz = this.props.quiz;\n\t\tconst stat = quiz ? quiz.stat : EMPTY_STAT;\n\n\t\treturn {\n\t\t\tsuccess: stat.success,\n\t\t\tfailure: stat.failure,\n\t\t\tcount: stat.count + 1\n\t\t};\n\t}\n\n\tanswerStat(success) {\n\t\tconst stat = this.props.quiz.stat;\n\n\t\treturn {\n\t\t\tsuccess: stat.success + (success ? 1 : 0),\n\t\t\tfailure: stat.failure + (success ? 0 : 1),\n\t\t\tcount: stat.count\n\t\t};\n\t}\n}\n\nQuiz.propTypes = {\n\tonMount: PropTypes.func.isRequired,\n\tquiz: PropTypes.shape({\n\t\tpuzzle: PropTypes.shape({\n\t\t\t\t\ttext: PropTypes.string.isRequired,\n\t\t\t\t\toptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n\t\t\t\t\tresult: PropTypes.number.isRequired\n\t\t\t\t}).isRequired,\n\t\tanswer: PropTypes.number,\n\t\tstat: PropTypes.shape({\n\t\t\tsuccess: PropTypes.number.isRequired,\n\t\t\tfailure: PropTypes.number.isRequired,\n\t\t\tcount: PropTypes.number.isRequired\n\t\t}).isRequired\n\t}),\n\tonChangeQuiz: PropTypes.func.isRequired\n};\n\nexport default Quiz;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, NavLink } from 'react-router-dom';\nimport { Nav, NavItem, Card, CardHeader, CardBody } from 'reactstrap';\n\nimport HeaderContent from './components/HeaderContent';\nimport Contacts from './components/Contacts';\nimport Quiz from './components/Quiz';\n\nimport './Main.scss';\n\nconst TEXTS = {\n\tcontacts: 'Kontakty',\n\tquiz: 'Kvíz'\n};\n\nclass Main extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tpage: null,\n\t\t\tcontacts: [],\n\t\t\tquiz: null\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Router basename=\"/quiz\">\n\t\t\t\t<Card className=\"Main__panel\">\n\t\t\t\t\t<CardHeader className=\"Main__panel-header\">\n\t\t\t\t\t\t<HeaderContent title={TEXTS[this.state.page]} />\n\t\t\t\t\t</CardHeader>\n\t\t\t\t\t<CardBody className=\"Main__panel-body\">\n\t\t\t\t\t\t<Nav className=\"Main__nav\">\n\t\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t\t<NavLink to=\"/contacts\" activeClassName=\"selected\" innerRef={(contacts) => {this.contacts = contacts}}>Kontakty</NavLink>\n\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t\t<NavLink to=\"/puzzle\" activeClassName=\"selected\" innerRef={(quiz) => {this.quiz = quiz}}>Kvíz</NavLink>\n\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t</Nav>\n\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" render={() => (<Redirect to=\"/contacts\"/>)} />\n\t\t\t\t\t\t\t<Route path=\"/contacts\" render={() => (\n\t\t\t\t\t\t\t\t\t<Contacts\n\t\t\t\t\t\t\t\t\t\tonMount={this.handleContactsSelected}\n\t\t\t\t\t\t\t\t\t\tcontacts={this.state.contacts}\n\t\t\t\t\t\t\t\t\t\tonChangeContacts={this.handleChangeContacts}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route path=\"/puzzle\" render={() => (\n\t\t\t\t\t\t\t\t\t<Quiz\n\t\t\t\t\t\t\t\t\t\tonMount={this.handleQuizSelected}\n\t\t\t\t\t\t\t\t\t\tquiz={this.state.quiz}\n\t\t\t\t\t\t\t\t\t\tonChangeQuiz={this.handleChangeQuiz}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</CardBody>\n\t\t\t\t</Card>\n\t\t\t</Router>\n\t\t);\n\t}\n\n\thandleContactsSelected = () => {\n\t\tthis.setState({ page: 'contacts' });\n\t}\n\n\thandleQuizSelected = () => {\n\t\tthis.setState({ page: 'quiz' });\n\t}\n\n\thandleChangeContacts = (contacts) => {\n\t\tthis.setState({ contacts });\n\t};\n\n\thandleChangeQuiz = (quiz) => {\n\t\tthis.setState({ quiz });\n\t}\n} \n\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}